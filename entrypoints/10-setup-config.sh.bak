#!/bin/bash

# Print all commands executed if DEBUG mode enabled
[ -n "${DEBUG:-""}" ] && set -x

config_dir="${KAFKA_HOME}/config"
config_path="${config_dir}/server.properties"

mkdir -p $config_dir

# Add provisioning header
echo "# Managed by 0xO1.IO" >> $config_path

# Set default Kafka environment
if [[ -z "$CONFIG_port" ]]; then
  export CONFIG_port=9092
fi

if [[ -z "$CONFIG_advertised.port" && -z "$CONFIG_listeners" && -z "$CONFIG_advertised.listeners" ]]; then
  export CONFIG_advertised.port="$CONFIG_port"
fi

if [[ -z "$CONFIG_broker.id" ]]; then
  if [[ -n "$BROKER_ID_COMMAND" ]]; then
      export CONFIG_broker.id=$(eval $BROKER_ID_COMMAND)
  else
      # By default auto allocate broker ID
      export CONFIG_broker.id=-1
  fi
fi

if [[ -z "$CONFIG_log.dirs" ]]; then
  export CONFIG_log.dirs="/var/log/kafka-logs-$HOSTNAME"
fi

if [[ -z "$CONFIG_zookeeper.connect" ]]; then
  export CONFIG_zookeeper.connect=$(env | grep ZK.*PORT_2181_TCP= | sed -e 's|.*tcp://||' | paste -sd ,)
fi

if [[ -n "$CONFIG_heap.opts" ]]; then
  sed -r -i "s/(export CONFIG_heap.opts)=\"(.*)\"/\1=\"$CONFIG_heap.opts\"/g" $KAFKA_HOME/bin/kafka-server-start.sh
  unset CONFIG_heap.opts
fi

if [[ -z "$CONFIG_advertised.host.name" && -n "$HOSTNAME_COMMAND" ]]; then
  export CONFIG_advertised.host.name=$(eval $HOSTNAME_COMMAND)
fi

# Render server properties configuration
if env | grep CONFIG_; then
  for VAR in `env | sort -h`
  do
    if [[ "$VAR" =~ ^CONFIG_ ]]; then
      property_key=`echo "$VAR" | sed -r "s/CONFIG_(.*)=.*/\1/g" | tr _ .`
      # if section name contains a '.', obtain value from full ENV rather than parse
      if [[ $property_key == *.* ]] ; then
        echo "$property_key = $(echo $VAR | cut -d'=' -f2)" >> $config_path
      else
        property_value=`echo "CONFIG_${property_key}"`
        echo "$property_key = ${!property_value}" >> $config_path
      fi
    fi
  done
fi
